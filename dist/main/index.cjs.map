{"version":3,"file":"index.cjs","sources":["../../packages/main/samples/electron-store.ts","../../node_modules/isexe/windows.js","../../node_modules/isexe/mode.js","../../node_modules/isexe/index.js","../../node_modules/which/which.js","../../node_modules/path-key/index.js","../../node_modules/cross-spawn/lib/util/resolveCommand.js","../../node_modules/cross-spawn/lib/util/escape.js","../../node_modules/shebang-regex/index.js","../../node_modules/shebang-command/index.js","../../node_modules/cross-spawn/lib/util/readShebang.js","../../node_modules/cross-spawn/lib/parse.js","../../node_modules/cross-spawn/lib/enoent.js","../../node_modules/cross-spawn/index.js","../../node_modules/strip-final-newline/index.js","../../node_modules/npm-run-path/node_modules/path-key/index.js","../../node_modules/npm-run-path/index.js","../../node_modules/execa/node_modules/mimic-fn/index.js","../../node_modules/execa/node_modules/onetime/index.js","../../node_modules/human-signals/build/src/realtime.js","../../node_modules/human-signals/build/src/core.js","../../node_modules/human-signals/build/src/signals.js","../../node_modules/human-signals/build/src/main.js","../../node_modules/execa/lib/error.js","../../node_modules/execa/lib/stdio.js","../../node_modules/signal-exit/signals.js","../../node_modules/signal-exit/index.js","../../node_modules/execa/lib/kill.js","../../node_modules/is-stream/index.js","../../node_modules/get-stream/buffer-stream.js","../../node_modules/get-stream/index.js","../../node_modules/merge-stream/index.js","../../node_modules/execa/lib/stream.js","../../node_modules/execa/lib/promise.js","../../node_modules/execa/lib/command.js","../../node_modules/execa/index.js","../../packages/main/samples/npm-esm-packages.ts","../../packages/main/index.ts"],"sourcesContent":["/**\n * Example of 'electron-store' usage.\n */\nimport { ipcMain } from 'electron'\nimport Store from 'electron-store'\n\n/**\n * Expose 'electron-store' to Renderer-process through 'ipcMain.handle'\n */\nconst store = new Store()\nipcMain.handle(\n  'electron-store',\n  async (_event, methodSign: string, ...args: any[]) => {\n    if (typeof (store as any)[methodSign] === 'function') {\n      return (store as any)[methodSign](...args)\n    }\n    return (store as any)[methodSign]\n  }\n)\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n","'use strict';\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\nmodule.exports = pathKey;\n// TODO: Remove this for the next major release\nmodule.exports.default = pathKey;\n","'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n","'use strict';\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(\\\\*)\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(\\\\*)$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\nmodule.exports.command = escapeCommand;\nmodule.exports.argument = escapeArgument;\n","'use strict';\nmodule.exports = /^#!(.*)/;\n","'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n","'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n","'use strict';\n\nconst path = require('path');\nconst resolveCommand = require('./util/resolveCommand');\nconst escape = require('./util/escape');\nconst readShebang = require('./util/readShebang');\n\nconst isWin = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n","'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n","'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n","export default function stripFinalNewline(input) {\n\tconst LF = typeof input === 'string' ? '\\n' : '\\n'.charCodeAt();\n\tconst CR = typeof input === 'string' ? '\\r' : '\\r'.charCodeAt();\n\n\tif (input[input.length - 1] === LF) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\tif (input[input.length - 1] === CR) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\treturn input;\n}\n","export default function pathKey(options = {}) {\n\tconst {\n\t\tenv = process.env,\n\t\tplatform = process.platform\n\t} = options;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(env).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n}\n","import process from 'node:process';\nimport path from 'node:path';\nimport url from 'node:url';\nimport pathKey from 'path-key';\n\nexport function npmRunPath(options = {}) {\n\tconst {\n\t\tcwd = process.cwd(),\n\t\tpath: path_ = process.env[pathKey()],\n\t\texecPath = process.execPath,\n\t} = options;\n\n\tlet previous;\n\tconst cwdString = cwd instanceof URL ? url.fileURLToPath(cwd) : cwd;\n\tlet cwdPath = path.resolve(cwdString);\n\tconst result = [];\n\n\twhile (previous !== cwdPath) {\n\t\tresult.push(path.join(cwdPath, 'node_modules/.bin'));\n\t\tprevious = cwdPath;\n\t\tcwdPath = path.resolve(cwdPath, '..');\n\t}\n\n\t// Ensure the running `node` binary is used.\n\tresult.push(path.resolve(cwdString, execPath, '..'));\n\n\treturn [...result, path_].join(path.delimiter);\n}\n\nexport function npmRunPathEnv({env = process.env, ...options} = {}) {\n\tenv = {...env};\n\n\tconst path = pathKey({env});\n\toptions.path = env[path];\n\tenv[path] = npmRunPath(options);\n\n\treturn env;\n}\n","const copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n// - one its descriptors is changed\n// - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nexport default function mimicFunction(to, from, {ignoreNonConfigurable = false} = {}) {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n}\n","import mimicFunction from 'mimic-fn';\n\nconst calledFunctions = new WeakMap();\n\nconst onetime = (function_, options = {}) => {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet returnValue;\n\tlet callCount = 0;\n\tconst functionName = function_.displayName || function_.name || '<anonymous>';\n\n\tconst onetime = function (...arguments_) {\n\t\tcalledFunctions.set(onetime, ++callCount);\n\n\t\tif (callCount === 1) {\n\t\t\treturnValue = function_.apply(this, arguments_);\n\t\t\tfunction_ = null;\n\t\t} else if (options.throw === true) {\n\t\t\tthrow new Error(`Function \\`${functionName}\\` can only be called once`);\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\tmimicFunction(onetime, function_);\n\tcalledFunctions.set(onetime, callCount);\n\n\treturn onetime;\n};\n\nonetime.callCount = function_ => {\n\tif (!calledFunctions.has(function_)) {\n\t\tthrow new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n\t}\n\n\treturn calledFunctions.get(function_);\n};\n\nexport default onetime;\n","\nexport const getRealtimeSignals=function(){\nconst length=SIGRTMAX-SIGRTMIN+1;\nreturn Array.from({length},getRealtimeSignal);\n};\n\nconst getRealtimeSignal=function(value,index){\nreturn{\nname:`SIGRT${index+1}`,\nnumber:SIGRTMIN+index,\naction:\"terminate\",\ndescription:\"Application-specific signal (realtime)\",\nstandard:\"posix\"};\n\n};\n\nconst SIGRTMIN=34;\nexport const SIGRTMAX=64;\n//# sourceMappingURL=realtime.js.map","\n\nexport const SIGNALS=[\n{\nname:\"SIGHUP\",\nnumber:1,\naction:\"terminate\",\ndescription:\"Terminal closed\",\nstandard:\"posix\"},\n\n{\nname:\"SIGINT\",\nnumber:2,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-C\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGQUIT\",\nnumber:3,\naction:\"core\",\ndescription:\"User interruption with CTRL-\\\\\",\nstandard:\"posix\"},\n\n{\nname:\"SIGILL\",\nnumber:4,\naction:\"core\",\ndescription:\"Invalid machine instruction\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGTRAP\",\nnumber:5,\naction:\"core\",\ndescription:\"Debugger breakpoint\",\nstandard:\"posix\"},\n\n{\nname:\"SIGABRT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGIOT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGBUS\",\nnumber:7,\naction:\"core\",\ndescription:\n\"Bus error due to misaligned, non-existing address or paging error\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGEMT\",\nnumber:7,\naction:\"terminate\",\ndescription:\"Command should be emulated but is not implemented\",\nstandard:\"other\"},\n\n{\nname:\"SIGFPE\",\nnumber:8,\naction:\"core\",\ndescription:\"Floating point arithmetic error\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGKILL\",\nnumber:9,\naction:\"terminate\",\ndescription:\"Forced termination\",\nstandard:\"posix\",\nforced:true},\n\n{\nname:\"SIGUSR1\",\nnumber:10,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"},\n\n{\nname:\"SIGSEGV\",\nnumber:11,\naction:\"core\",\ndescription:\"Segmentation fault\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGUSR2\",\nnumber:12,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"},\n\n{\nname:\"SIGPIPE\",\nnumber:13,\naction:\"terminate\",\ndescription:\"Broken pipe or socket\",\nstandard:\"posix\"},\n\n{\nname:\"SIGALRM\",\nnumber:14,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"posix\"},\n\n{\nname:\"SIGTERM\",\nnumber:15,\naction:\"terminate\",\ndescription:\"Termination\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGSTKFLT\",\nnumber:16,\naction:\"terminate\",\ndescription:\"Stack is empty or overflowed\",\nstandard:\"other\"},\n\n{\nname:\"SIGCHLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"posix\"},\n\n{\nname:\"SIGCLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"other\"},\n\n{\nname:\"SIGCONT\",\nnumber:18,\naction:\"unpause\",\ndescription:\"Unpaused\",\nstandard:\"posix\",\nforced:true},\n\n{\nname:\"SIGSTOP\",\nnumber:19,\naction:\"pause\",\ndescription:\"Paused\",\nstandard:\"posix\",\nforced:true},\n\n{\nname:\"SIGTSTP\",\nnumber:20,\naction:\"pause\",\ndescription:\"Paused using CTRL-Z or \\\"suspend\\\"\",\nstandard:\"posix\"},\n\n{\nname:\"SIGTTIN\",\nnumber:21,\naction:\"pause\",\ndescription:\"Background process cannot read terminal input\",\nstandard:\"posix\"},\n\n{\nname:\"SIGBREAK\",\nnumber:21,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-BREAK\",\nstandard:\"other\"},\n\n{\nname:\"SIGTTOU\",\nnumber:22,\naction:\"pause\",\ndescription:\"Background process cannot write to terminal output\",\nstandard:\"posix\"},\n\n{\nname:\"SIGURG\",\nnumber:23,\naction:\"ignore\",\ndescription:\"Socket received out-of-band data\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGXCPU\",\nnumber:24,\naction:\"core\",\ndescription:\"Process timed out\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGXFSZ\",\nnumber:25,\naction:\"core\",\ndescription:\"File too big\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGVTALRM\",\nnumber:26,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGPROF\",\nnumber:27,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGWINCH\",\nnumber:28,\naction:\"ignore\",\ndescription:\"Terminal window size changed\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGIO\",\nnumber:29,\naction:\"terminate\",\ndescription:\"I/O is available\",\nstandard:\"other\"},\n\n{\nname:\"SIGPOLL\",\nnumber:29,\naction:\"terminate\",\ndescription:\"Watched event\",\nstandard:\"other\"},\n\n{\nname:\"SIGINFO\",\nnumber:29,\naction:\"ignore\",\ndescription:\"Request for process information\",\nstandard:\"other\"},\n\n{\nname:\"SIGPWR\",\nnumber:30,\naction:\"terminate\",\ndescription:\"Device running out of power\",\nstandard:\"systemv\"},\n\n{\nname:\"SIGSYS\",\nnumber:31,\naction:\"core\",\ndescription:\"Invalid system call\",\nstandard:\"other\"},\n\n{\nname:\"SIGUNUSED\",\nnumber:31,\naction:\"terminate\",\ndescription:\"Invalid system call\",\nstandard:\"other\"}];\n//# sourceMappingURL=core.js.map","import{constants}from\"os\";\n\nimport{SIGNALS}from\"./core.js\";\nimport{getRealtimeSignals}from\"./realtime.js\";\n\n\n\nexport const getSignals=function(){\nconst realtimeSignals=getRealtimeSignals();\nconst signals=[...SIGNALS,...realtimeSignals].map(normalizeSignal);\nreturn signals;\n};\n\n\n\n\n\n\n\nconst normalizeSignal=function({\nname,\nnumber:defaultNumber,\ndescription,\naction,\nforced=false,\nstandard})\n{\nconst{\nsignals:{[name]:constantSignal}}=\nconstants;\nconst supported=constantSignal!==undefined;\nconst number=supported?constantSignal:defaultNumber;\nreturn{name,number,description,supported,action,forced,standard};\n};\n//# sourceMappingURL=signals.js.map","import{constants}from\"os\";\n\nimport{SIGRTMAX}from\"./realtime.js\";\nimport{getSignals}from\"./signals.js\";\n\n\n\nconst getSignalsByName=function(){\nconst signals=getSignals();\nreturn signals.reduce(getSignalByName,{});\n};\n\nconst getSignalByName=function(\nsignalByNameMemo,\n{name,number,description,supported,action,forced,standard})\n{\nreturn{\n...signalByNameMemo,\n[name]:{name,number,description,supported,action,forced,standard}};\n\n};\n\nexport const signalsByName=getSignalsByName();\n\n\n\n\nconst getSignalsByNumber=function(){\nconst signals=getSignals();\nconst length=SIGRTMAX+1;\nconst signalsA=Array.from({length},(value,number)=>\ngetSignalByNumber(number,signals));\n\nreturn Object.assign({},...signalsA);\n};\n\nconst getSignalByNumber=function(number,signals){\nconst signal=findSignalByNumber(number,signals);\n\nif(signal===undefined){\nreturn{};\n}\n\nconst{name,description,supported,action,forced,standard}=signal;\nreturn{\n[number]:{\nname,\nnumber,\ndescription,\nsupported,\naction,\nforced,\nstandard}};\n\n\n};\n\n\n\nconst findSignalByNumber=function(number,signals){\nconst signal=signals.find(({name})=>constants.signals[name]===number);\n\nif(signal!==undefined){\nreturn signal;\n}\n\nreturn signals.find((signalA)=>signalA.number===number);\n};\n\nexport const signalsByNumber=getSignalsByNumber();\n//# sourceMappingURL=main.js.map","import {signalsByName} from 'human-signals';\n\nconst getErrorPrefix = ({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled}) => {\n\tif (timedOut) {\n\t\treturn `timed out after ${timeout} milliseconds`;\n\t}\n\n\tif (isCanceled) {\n\t\treturn 'was canceled';\n\t}\n\n\tif (errorCode !== undefined) {\n\t\treturn `failed with ${errorCode}`;\n\t}\n\n\tif (signal !== undefined) {\n\t\treturn `was killed with ${signal} (${signalDescription})`;\n\t}\n\n\tif (exitCode !== undefined) {\n\t\treturn `failed with exit code ${exitCode}`;\n\t}\n\n\treturn 'failed';\n};\n\nexport const makeError = ({\n\tstdout,\n\tstderr,\n\tall,\n\terror,\n\tsignal,\n\texitCode,\n\tcommand,\n\tescapedCommand,\n\ttimedOut,\n\tisCanceled,\n\tkilled,\n\tparsed: {options: {timeout}},\n}) => {\n\t// `signal` and `exitCode` emitted on `spawned.on('exit')` event can be `null`.\n\t// We normalize them to `undefined`\n\texitCode = exitCode === null ? undefined : exitCode;\n\tsignal = signal === null ? undefined : signal;\n\tconst signalDescription = signal === undefined ? undefined : signalsByName[signal].description;\n\n\tconst errorCode = error && error.code;\n\n\tconst prefix = getErrorPrefix({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled});\n\tconst execaMessage = `Command ${prefix}: ${command}`;\n\tconst isError = Object.prototype.toString.call(error) === '[object Error]';\n\tconst shortMessage = isError ? `${execaMessage}\\n${error.message}` : execaMessage;\n\tconst message = [shortMessage, stderr, stdout].filter(Boolean).join('\\n');\n\n\tif (isError) {\n\t\terror.originalMessage = error.message;\n\t\terror.message = message;\n\t} else {\n\t\terror = new Error(message);\n\t}\n\n\terror.shortMessage = shortMessage;\n\terror.command = command;\n\terror.escapedCommand = escapedCommand;\n\terror.exitCode = exitCode;\n\terror.signal = signal;\n\terror.signalDescription = signalDescription;\n\terror.stdout = stdout;\n\terror.stderr = stderr;\n\n\tif (all !== undefined) {\n\t\terror.all = all;\n\t}\n\n\tif ('bufferedData' in error) {\n\t\tdelete error.bufferedData;\n\t}\n\n\terror.failed = true;\n\terror.timedOut = Boolean(timedOut);\n\terror.isCanceled = isCanceled;\n\terror.killed = killed && !timedOut;\n\n\treturn error;\n};\n","const aliases = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = options => aliases.some(alias => options[alias] !== undefined);\n\nexport const normalizeStdio = options => {\n\tif (!options) {\n\t\treturn;\n\t}\n\n\tconst {stdio} = options;\n\n\tif (stdio === undefined) {\n\t\treturn aliases.map(alias => options[alias]);\n\t}\n\n\tif (hasAlias(options)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${aliases.map(alias => `\\`${alias}\\``).join(', ')}`);\n\t}\n\n\tif (typeof stdio === 'string') {\n\t\treturn stdio;\n\t}\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst length = Math.max(stdio.length, aliases.length);\n\treturn Array.from({length}, (value, index) => stdio[index]);\n};\n\n// `ipc` is pushed unless it is already present\nexport const normalizeStdioNode = options => {\n\tconst stdio = normalizeStdio(options);\n\n\tif (stdio === 'ipc') {\n\t\treturn 'ipc';\n\t}\n\n\tif (stdio === undefined || typeof stdio === 'string') {\n\t\treturn [stdio, stdio, stdio, 'ipc'];\n\t}\n\n\tif (stdio.includes('ipc')) {\n\t\treturn stdio;\n\t}\n\n\treturn [...stdio, 'ipc'];\n};\n","// This is not the set of all possible signals.\n//\n// It IS, however, the set of all signals that trigger\n// an exit on either Linux or BSD systems.  Linux is a\n// superset of the signal names supported on BSD, and\n// the unknown signals just fail to register, so we can\n// catch that easily enough.\n//\n// Don't bother with SIGKILL.  It's uncatchable, which\n// means that we can't fire any callbacks anyway.\n//\n// If a user does happen to register a handler on a non-\n// fatal signal like SIGWINCH or something, and then\n// exit, it'll end up firing `process.emit('exit')`, so\n// the handler will be fired anyway.\n//\n// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n// artificially, inherently leave the process in a\n// state from which it is not safe to try and enter JS\n// listeners.\nmodule.exports = [\n  'SIGABRT',\n  'SIGALRM',\n  'SIGHUP',\n  'SIGINT',\n  'SIGTERM'\n]\n\nif (process.platform !== 'win32') {\n  module.exports.push(\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  module.exports.push(\n    'SIGIO',\n    'SIGPOLL',\n    'SIGPWR',\n    'SIGSTKFLT',\n    'SIGUNUSED'\n  )\n}\n","// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nvar process = global.process\n\nconst processOk = function (process) {\n  return process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function'\n}\n\n// some kind of non-node environment, just no-op\n/* istanbul ignore if */\nif (!processOk(process)) {\n  module.exports = function () {\n    return function () {}\n  }\n} else {\n  var assert = require('assert')\n  var signals = require('./signals.js')\n  var isWin = /^win/i.test(process.platform)\n\n  var EE = require('events')\n  /* istanbul ignore if */\n  if (typeof EE !== 'function') {\n    EE = EE.EventEmitter\n  }\n\n  var emitter\n  if (process.__signal_exit_emitter__) {\n    emitter = process.__signal_exit_emitter__\n  } else {\n    emitter = process.__signal_exit_emitter__ = new EE()\n    emitter.count = 0\n    emitter.emitted = {}\n  }\n\n  // Because this emitter is a global, we have to check to see if a\n  // previous version of this library failed to enable infinite listeners.\n  // I know what you're about to say.  But literally everything about\n  // signal-exit is a compromise with evil.  Get used to it.\n  if (!emitter.infinite) {\n    emitter.setMaxListeners(Infinity)\n    emitter.infinite = true\n  }\n\n  module.exports = function (cb, opts) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return function () {}\n    }\n    assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n    if (loaded === false) {\n      load()\n    }\n\n    var ev = 'exit'\n    if (opts && opts.alwaysLast) {\n      ev = 'afterexit'\n    }\n\n    var remove = function () {\n      emitter.removeListener(ev, cb)\n      if (emitter.listeners('exit').length === 0 &&\n          emitter.listeners('afterexit').length === 0) {\n        unload()\n      }\n    }\n    emitter.on(ev, cb)\n\n    return remove\n  }\n\n  var unload = function unload () {\n    if (!loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = false\n\n    signals.forEach(function (sig) {\n      try {\n        process.removeListener(sig, sigListeners[sig])\n      } catch (er) {}\n    })\n    process.emit = originalProcessEmit\n    process.reallyExit = originalProcessReallyExit\n    emitter.count -= 1\n  }\n  module.exports.unload = unload\n\n  var emit = function emit (event, code, signal) {\n    /* istanbul ignore if */\n    if (emitter.emitted[event]) {\n      return\n    }\n    emitter.emitted[event] = true\n    emitter.emit(event, code, signal)\n  }\n\n  // { <signal>: <listener fn>, ... }\n  var sigListeners = {}\n  signals.forEach(function (sig) {\n    sigListeners[sig] = function listener () {\n      /* istanbul ignore if */\n      if (!processOk(global.process)) {\n        return\n      }\n      // If there are no other listeners, an exit is coming!\n      // Simplest way: remove us and then re-send the signal.\n      // We know that this will kill the process, so we can\n      // safely emit now.\n      var listeners = process.listeners(sig)\n      if (listeners.length === emitter.count) {\n        unload()\n        emit('exit', null, sig)\n        /* istanbul ignore next */\n        emit('afterexit', null, sig)\n        /* istanbul ignore next */\n        if (isWin && sig === 'SIGHUP') {\n          // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n          // so use a supported signal instead\n          sig = 'SIGINT'\n        }\n        /* istanbul ignore next */\n        process.kill(process.pid, sig)\n      }\n    }\n  })\n\n  module.exports.signals = function () {\n    return signals\n  }\n\n  var loaded = false\n\n  var load = function load () {\n    if (loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    emitter.count += 1\n\n    signals = signals.filter(function (sig) {\n      try {\n        process.on(sig, sigListeners[sig])\n        return true\n      } catch (er) {\n        return false\n      }\n    })\n\n    process.emit = processEmit\n    process.reallyExit = processReallyExit\n  }\n  module.exports.load = load\n\n  var originalProcessReallyExit = process.reallyExit\n  var processReallyExit = function processReallyExit (code) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return\n    }\n    process.exitCode = code || /* istanbul ignore next */ 0\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    /* istanbul ignore next */\n    originalProcessReallyExit.call(process, process.exitCode)\n  }\n\n  var originalProcessEmit = process.emit\n  var processEmit = function processEmit (ev, arg) {\n    if (ev === 'exit' && processOk(global.process)) {\n      /* istanbul ignore else */\n      if (arg !== undefined) {\n        process.exitCode = arg\n      }\n      var ret = originalProcessEmit.apply(this, arguments)\n      /* istanbul ignore next */\n      emit('exit', process.exitCode, null)\n      /* istanbul ignore next */\n      emit('afterexit', process.exitCode, null)\n      /* istanbul ignore next */\n      return ret\n    } else {\n      return originalProcessEmit.apply(this, arguments)\n    }\n  }\n}\n","import os from 'node:os';\nimport onExit from 'signal-exit';\n\nconst DEFAULT_FORCE_KILL_TIMEOUT = 1000 * 5;\n\n// Monkey-patches `childProcess.kill()` to add `forceKillAfterTimeout` behavior\nexport const spawnedKill = (kill, signal = 'SIGTERM', options = {}) => {\n\tconst killResult = kill(signal);\n\tsetKillTimeout(kill, signal, options, killResult);\n\treturn killResult;\n};\n\nconst setKillTimeout = (kill, signal, options, killResult) => {\n\tif (!shouldForceKill(signal, options, killResult)) {\n\t\treturn;\n\t}\n\n\tconst timeout = getForceKillAfterTimeout(options);\n\tconst t = setTimeout(() => {\n\t\tkill('SIGKILL');\n\t}, timeout);\n\n\t// Guarded because there's no `.unref()` when `execa` is used in the renderer\n\t// process in Electron. This cannot be tested since we don't run tests in\n\t// Electron.\n\t// istanbul ignore else\n\tif (t.unref) {\n\t\tt.unref();\n\t}\n};\n\nconst shouldForceKill = (signal, {forceKillAfterTimeout}, killResult) => isSigterm(signal) && forceKillAfterTimeout !== false && killResult;\n\nconst isSigterm = signal => signal === os.constants.signals.SIGTERM\n\t\t|| (typeof signal === 'string' && signal.toUpperCase() === 'SIGTERM');\n\nconst getForceKillAfterTimeout = ({forceKillAfterTimeout = true}) => {\n\tif (forceKillAfterTimeout === true) {\n\t\treturn DEFAULT_FORCE_KILL_TIMEOUT;\n\t}\n\n\tif (!Number.isFinite(forceKillAfterTimeout) || forceKillAfterTimeout < 0) {\n\t\tthrow new TypeError(`Expected the \\`forceKillAfterTimeout\\` option to be a non-negative integer, got \\`${forceKillAfterTimeout}\\` (${typeof forceKillAfterTimeout})`);\n\t}\n\n\treturn forceKillAfterTimeout;\n};\n\n// `childProcess.cancel()`\nexport const spawnedCancel = (spawned, context) => {\n\tconst killResult = spawned.kill();\n\n\tif (killResult) {\n\t\tcontext.isCanceled = true;\n\t}\n};\n\nconst timeoutKill = (spawned, signal, reject) => {\n\tspawned.kill(signal);\n\treject(Object.assign(new Error('Timed out'), {timedOut: true, signal}));\n};\n\n// `timeout` option handling\nexport const setupTimeout = (spawned, {timeout, killSignal = 'SIGTERM'}, spawnedPromise) => {\n\tif (timeout === 0 || timeout === undefined) {\n\t\treturn spawnedPromise;\n\t}\n\n\tlet timeoutId;\n\tconst timeoutPromise = new Promise((resolve, reject) => {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutKill(spawned, killSignal, reject);\n\t\t}, timeout);\n\t});\n\n\tconst safeSpawnedPromise = spawnedPromise.finally(() => {\n\t\tclearTimeout(timeoutId);\n\t});\n\n\treturn Promise.race([timeoutPromise, safeSpawnedPromise]);\n};\n\nexport const validateTimeout = ({timeout}) => {\n\tif (timeout !== undefined && (!Number.isFinite(timeout) || timeout < 0)) {\n\t\tthrow new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${timeout}\\` (${typeof timeout})`);\n\t}\n};\n\n// `cleanup` option handling\nexport const setExitHandler = async (spawned, {cleanup, detached}, timedPromise) => {\n\tif (!cleanup || detached) {\n\t\treturn timedPromise;\n\t}\n\n\tconst removeExitHandler = onExit(() => {\n\t\tspawned.kill();\n\t});\n\n\treturn timedPromise.finally(() => {\n\t\tremoveExitHandler();\n\t});\n};\n","export function isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\nexport function isWritableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.writable !== false\n\t\t&& typeof stream._write === 'function'\n\t\t&& typeof stream._writableState === 'object';\n}\n\nexport function isReadableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.readable !== false\n\t\t&& typeof stream._read === 'function'\n\t\t&& typeof stream._readableState === 'object';\n}\n\nexport function isDuplexStream(stream) {\n\treturn isWritableStream(stream)\n\t\t&& isReadableStream(stream);\n}\n\nexport function isTransformStream(stream) {\n\treturn isDuplexStream(stream)\n\t\t&& typeof stream._transform === 'function';\n}\n","'use strict';\nconst {PassThrough: PassThroughStream} = require('stream');\n\nmodule.exports = options => {\n\toptions = {...options};\n\n\tconst {array} = options;\n\tlet {encoding} = options;\n\tconst isBuffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || isBuffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (isBuffer) {\n\t\tencoding = null;\n\t}\n\n\tconst stream = new PassThroughStream({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tlet length = 0;\n\tconst chunks = [];\n\n\tstream.on('data', chunk => {\n\t\tchunks.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlength = chunks.length;\n\t\t} else {\n\t\t\tlength += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn chunks;\n\t\t}\n\n\t\treturn isBuffer ? Buffer.concat(chunks, length) : chunks.join('');\n\t};\n\n\tstream.getBufferedLength = () => length;\n\n\treturn stream;\n};\n","'use strict';\nconst {constants: BufferConstants} = require('buffer');\nconst stream = require('stream');\nconst {promisify} = require('util');\nconst bufferStream = require('./buffer-stream');\n\nconst streamPipelinePromisified = promisify(stream.pipeline);\n\nclass MaxBufferError extends Error {\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t\tthis.name = 'MaxBufferError';\n\t}\n}\n\nasync function getStream(inputStream, options) {\n\tif (!inputStream) {\n\t\tthrow new Error('Expected a stream');\n\t}\n\n\toptions = {\n\t\tmaxBuffer: Infinity,\n\t\t...options\n\t};\n\n\tconst {maxBuffer} = options;\n\tconst stream = bufferStream(options);\n\n\tawait new Promise((resolve, reject) => {\n\t\tconst rejectPromise = error => {\n\t\t\t// Don't retrieve an oversized buffer.\n\t\t\tif (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {\n\t\t\t\terror.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(error);\n\t\t};\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tawait streamPipelinePromisified(inputStream, stream);\n\t\t\t\tresolve();\n\t\t\t} catch (error) {\n\t\t\t\trejectPromise(error);\n\t\t\t}\n\t\t})();\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\trejectPromise(new MaxBufferError());\n\t\t\t}\n\t\t});\n\t});\n\n\treturn stream.getBufferedValue();\n}\n\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, options) => getStream(stream, {...options, encoding: 'buffer'});\nmodule.exports.array = (stream, options) => getStream(stream, {...options, array: true});\nmodule.exports.MaxBufferError = MaxBufferError;\n","'use strict';\n\nconst { PassThrough } = require('stream');\n\nmodule.exports = function (/*streams...*/) {\n  var sources = []\n  var output  = new PassThrough({objectMode: true})\n\n  output.setMaxListeners(0)\n\n  output.add = add\n  output.isEmpty = isEmpty\n\n  output.on('unpipe', remove)\n\n  Array.prototype.slice.call(arguments).forEach(add)\n\n  return output\n\n  function add (source) {\n    if (Array.isArray(source)) {\n      source.forEach(add)\n      return this\n    }\n\n    sources.push(source);\n    source.once('end', remove.bind(null, source))\n    source.once('error', output.emit.bind(output, 'error'))\n    source.pipe(output, {end: false})\n    return this\n  }\n\n  function isEmpty () {\n    return sources.length == 0;\n  }\n\n  function remove (source) {\n    sources = sources.filter(function (it) { return it !== source })\n    if (!sources.length && output.readable) { output.end() }\n  }\n}\n","import {isStream} from 'is-stream';\nimport getStream from 'get-stream';\nimport mergeStream from 'merge-stream';\n\n// `input` option\nexport const handleInput = (spawned, input) => {\n\t// Checking for stdin is workaround for https://github.com/nodejs/node/issues/26852\n\t// @todo remove `|| spawned.stdin === undefined` once we drop support for Node.js <=12.2.0\n\tif (input === undefined || spawned.stdin === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n};\n\n// `all` interleaves `stdout` and `stderr`\nexport const makeAllStream = (spawned, {all}) => {\n\tif (!all || (!spawned.stdout && !spawned.stderr)) {\n\t\treturn;\n\t}\n\n\tconst mixed = mergeStream();\n\n\tif (spawned.stdout) {\n\t\tmixed.add(spawned.stdout);\n\t}\n\n\tif (spawned.stderr) {\n\t\tmixed.add(spawned.stderr);\n\t}\n\n\treturn mixed;\n};\n\n// On failure, `result.stdout|stderr|all` should contain the currently buffered stream\nconst getBufferedData = async (stream, streamPromise) => {\n\tif (!stream) {\n\t\treturn;\n\t}\n\n\tstream.destroy();\n\n\ttry {\n\t\treturn await streamPromise;\n\t} catch (error) {\n\t\treturn error.bufferedData;\n\t}\n};\n\nconst getStreamPromise = (stream, {encoding, buffer, maxBuffer}) => {\n\tif (!stream || !buffer) {\n\t\treturn;\n\t}\n\n\tif (encoding) {\n\t\treturn getStream(stream, {encoding, maxBuffer});\n\t}\n\n\treturn getStream.buffer(stream, {maxBuffer});\n};\n\n// Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)\nexport const getSpawnedResult = async ({stdout, stderr, all}, {encoding, buffer, maxBuffer}, processDone) => {\n\tconst stdoutPromise = getStreamPromise(stdout, {encoding, buffer, maxBuffer});\n\tconst stderrPromise = getStreamPromise(stderr, {encoding, buffer, maxBuffer});\n\tconst allPromise = getStreamPromise(all, {encoding, buffer, maxBuffer: maxBuffer * 2});\n\n\ttry {\n\t\treturn await Promise.all([processDone, stdoutPromise, stderrPromise, allPromise]);\n\t} catch (error) {\n\t\treturn Promise.all([\n\t\t\t{error, signal: error.signal, timedOut: error.timedOut},\n\t\t\tgetBufferedData(stdout, stdoutPromise),\n\t\t\tgetBufferedData(stderr, stderrPromise),\n\t\t\tgetBufferedData(all, allPromise),\n\t\t]);\n\t}\n};\n\nexport const validateInputSync = ({input}) => {\n\tif (isStream(input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n};\n","const nativePromisePrototype = (async () => {})().constructor.prototype;\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property),\n]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nexport const mergePromise = (spawned, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\t// Starting the main `promise` is deferred to avoid consuming streams\n\t\tconst value = typeof promise === 'function'\n\t\t\t? (...args) => Reflect.apply(descriptor.value, promise(), args)\n\t\t\t: descriptor.value.bind(promise);\n\n\t\tReflect.defineProperty(spawned, property, {...descriptor, value});\n\t}\n\n\treturn spawned;\n};\n\n// Use promises instead of `child_process` events\nexport const getSpawnedPromise = spawned => new Promise((resolve, reject) => {\n\tspawned.on('exit', (exitCode, signal) => {\n\t\tresolve({exitCode, signal});\n\t});\n\n\tspawned.on('error', error => {\n\t\treject(error);\n\t});\n\n\tif (spawned.stdin) {\n\t\tspawned.stdin.on('error', error => {\n\t\t\treject(error);\n\t\t});\n\t}\n});\n","const normalizeArgs = (file, args = []) => {\n\tif (!Array.isArray(args)) {\n\t\treturn [file];\n\t}\n\n\treturn [file, ...args];\n};\n\nconst NO_ESCAPE_REGEXP = /^[\\w.-]+$/;\nconst DOUBLE_QUOTES_REGEXP = /\"/g;\n\nconst escapeArg = arg => {\n\tif (typeof arg !== 'string' || NO_ESCAPE_REGEXP.test(arg)) {\n\t\treturn arg;\n\t}\n\n\treturn `\"${arg.replace(DOUBLE_QUOTES_REGEXP, '\\\\\"')}\"`;\n};\n\nexport const joinCommand = (file, args) => normalizeArgs(file, args).join(' ');\n\nexport const getEscapedCommand = (file, args) => normalizeArgs(file, args).map(arg => escapeArg(arg)).join(' ');\n\nconst SPACES_REGEXP = / +/g;\n\n// Handle `execaCommand()`\nexport const parseCommand = command => {\n\tconst tokens = [];\n\tfor (const token of command.trim().split(SPACES_REGEXP)) {\n\t\t// Allow spaces to be escaped by a backslash if not meant as a delimiter\n\t\tconst previousToken = tokens[tokens.length - 1];\n\t\tif (previousToken && previousToken.endsWith('\\\\')) {\n\t\t\t// Merge previous token with current one\n\t\t\ttokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n\t\t} else {\n\t\t\ttokens.push(token);\n\t\t}\n\t}\n\n\treturn tokens;\n};\n","import {Buffer} from 'node:buffer';\nimport path from 'node:path';\nimport childProcess from 'node:child_process';\nimport process from 'node:process';\nimport crossSpawn from 'cross-spawn';\nimport stripFinalNewline from 'strip-final-newline';\nimport {npmRunPathEnv} from 'npm-run-path';\nimport onetime from 'onetime';\nimport {makeError} from './lib/error.js';\nimport {normalizeStdio, normalizeStdioNode} from './lib/stdio.js';\nimport {spawnedKill, spawnedCancel, setupTimeout, validateTimeout, setExitHandler} from './lib/kill.js';\nimport {handleInput, getSpawnedResult, makeAllStream, validateInputSync} from './lib/stream.js';\nimport {mergePromise, getSpawnedPromise} from './lib/promise.js';\nimport {joinCommand, parseCommand, getEscapedCommand} from './lib/command.js';\n\nconst DEFAULT_MAX_BUFFER = 1000 * 1000 * 100;\n\nconst getEnv = ({env: envOption, extendEnv, preferLocal, localDir, execPath}) => {\n\tconst env = extendEnv ? {...process.env, ...envOption} : envOption;\n\n\tif (preferLocal) {\n\t\treturn npmRunPathEnv({env, cwd: localDir, execPath});\n\t}\n\n\treturn env;\n};\n\nconst handleArguments = (file, args, options = {}) => {\n\tconst parsed = crossSpawn._parse(file, args, options);\n\tfile = parsed.command;\n\targs = parsed.args;\n\toptions = parsed.options;\n\n\toptions = {\n\t\tmaxBuffer: DEFAULT_MAX_BUFFER,\n\t\tbuffer: true,\n\t\tstripFinalNewline: true,\n\t\textendEnv: true,\n\t\tpreferLocal: false,\n\t\tlocalDir: options.cwd || process.cwd(),\n\t\texecPath: process.execPath,\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true,\n\t\tall: false,\n\t\twindowsHide: true,\n\t\t...options,\n\t};\n\n\toptions.env = getEnv(options);\n\n\toptions.stdio = normalizeStdio(options);\n\n\tif (process.platform === 'win32' && path.basename(file, '.exe') === 'cmd') {\n\t\t// #116\n\t\targs.unshift('/q');\n\t}\n\n\treturn {file, args, options, parsed};\n};\n\nconst handleOutput = (options, value, error) => {\n\tif (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n\t\t// When `execaSync()` errors, we normalize it to '' to mimic `execa()`\n\t\treturn error === undefined ? undefined : '';\n\t}\n\n\tif (options.stripFinalNewline) {\n\t\treturn stripFinalNewline(value);\n\t}\n\n\treturn value;\n};\n\nexport function execa(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateTimeout(parsed.options);\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\t// Ensure the returned error is always both a promise and a child process\n\t\tconst dummySpawned = new childProcess.ChildProcess();\n\t\tconst errorPromise = Promise.reject(makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t}));\n\t\treturn mergePromise(dummySpawned, errorPromise);\n\t}\n\n\tconst spawnedPromise = getSpawnedPromise(spawned);\n\tconst timedPromise = setupTimeout(spawned, parsed.options, spawnedPromise);\n\tconst processDone = setExitHandler(spawned, parsed.options, timedPromise);\n\n\tconst context = {isCanceled: false};\n\n\tspawned.kill = spawnedKill.bind(null, spawned.kill.bind(spawned));\n\tspawned.cancel = spawnedCancel.bind(null, spawned, context);\n\n\tconst handlePromise = async () => {\n\t\tconst [{error, exitCode, signal, timedOut}, stdoutResult, stderrResult, allResult] = await getSpawnedResult(spawned, parsed.options, processDone);\n\t\tconst stdout = handleOutput(parsed.options, stdoutResult);\n\t\tconst stderr = handleOutput(parsed.options, stderrResult);\n\t\tconst all = handleOutput(parsed.options, allResult);\n\n\t\tif (error || exitCode !== 0 || signal !== null) {\n\t\t\tconst returnedError = makeError({\n\t\t\t\terror,\n\t\t\t\texitCode,\n\t\t\t\tsignal,\n\t\t\t\tstdout,\n\t\t\t\tstderr,\n\t\t\t\tall,\n\t\t\t\tcommand,\n\t\t\t\tescapedCommand,\n\t\t\t\tparsed,\n\t\t\t\ttimedOut,\n\t\t\t\tisCanceled: context.isCanceled || (parsed.options.signal ? parsed.options.signal.aborted : false),\n\t\t\t\tkilled: spawned.killed,\n\t\t\t});\n\n\t\t\tif (!parsed.options.reject) {\n\t\t\t\treturn returnedError;\n\t\t\t}\n\n\t\t\tthrow returnedError;\n\t\t}\n\n\t\treturn {\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\texitCode: 0,\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\tall,\n\t\t\tfailed: false,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t};\n\t};\n\n\tconst handlePromiseOnce = onetime(handlePromise);\n\n\thandleInput(spawned, parsed.options.input);\n\n\tspawned.all = makeAllStream(spawned, parsed.options);\n\n\treturn mergePromise(spawned, handlePromiseOnce);\n}\n\nexport function execaSync(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateInputSync(parsed.options);\n\n\tlet result;\n\ttry {\n\t\tresult = childProcess.spawnSync(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\tthrow makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t});\n\t}\n\n\tconst stdout = handleOutput(parsed.options, result.stdout, result.error);\n\tconst stderr = handleOutput(parsed.options, result.stderr, result.error);\n\n\tif (result.error || result.status !== 0 || result.signal !== null) {\n\t\tconst error = makeError({\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\terror: result.error,\n\t\t\tsignal: result.signal,\n\t\t\texitCode: result.status,\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: result.error && result.error.code === 'ETIMEDOUT',\n\t\t\tisCanceled: false,\n\t\t\tkilled: result.signal !== null,\n\t\t});\n\n\t\tif (!parsed.options.reject) {\n\t\t\treturn error;\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\treturn {\n\t\tcommand,\n\t\tescapedCommand,\n\t\texitCode: 0,\n\t\tstdout,\n\t\tstderr,\n\t\tfailed: false,\n\t\ttimedOut: false,\n\t\tisCanceled: false,\n\t\tkilled: false,\n\t};\n}\n\nexport function execaCommand(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execa(file, args, options);\n}\n\nexport function execaCommandSync(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execaSync(file, args, options);\n}\n\nexport function execaNode(scriptPath, args, options = {}) {\n\tif (args && !Array.isArray(args) && typeof args === 'object') {\n\t\toptions = args;\n\t\targs = [];\n\t}\n\n\tconst stdio = normalizeStdioNode(options);\n\tconst defaultExecArgv = process.execArgv.filter(arg => !arg.startsWith('--inspect'));\n\n\tconst {\n\t\tnodePath = process.execPath,\n\t\tnodeOptions = defaultExecArgv,\n\t} = options;\n\n\treturn execa(\n\t\tnodePath,\n\t\t[\n\t\t\t...nodeOptions,\n\t\t\tscriptPath,\n\t\t\t...(Array.isArray(args) ? args : []),\n\t\t],\n\t\t{\n\t\t\t...options,\n\t\t\tstdin: undefined,\n\t\t\tstdout: undefined,\n\t\t\tstderr: undefined,\n\t\t\tstdio,\n\t\t\tshell: false,\n\t\t},\n\t);\n}\n","import { execa } from 'execa'\n\n(async () => {\n  const { stdout } = await execa('echo', ['unicorns'])\n\n  // console.log(stdout) // unicorns\n})()\n","import { app, ipcMain, dialog, BrowserWindow, shell } from \"electron\";\nimport { release } from \"os\";\nimport { join } from \"path\";\nimport \"./samples/electron-store\";\nimport \"./samples/npm-esm-packages\";\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith(\"6.1\")) app.disableHardwareAcceleration();\n\n// Set application name for Windows 10+ notifications\nif (process.platform === \"win32\") app.setAppUserModelId(app.getName());\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit();\n  process.exit(0);\n}\n\nlet win: BrowserWindow | null = null;\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: \"Main window\",\n    webPreferences: {\n      devTools: false,\n      preload: join(__dirname, \"../preload/index.cjs\"),\n    },\n    fullscreen: true,\n  });\n\n  if (app.isPackaged) {\n    win.loadFile(join(__dirname, \"../renderer/index.html\"));\n  } else {\n    // 🚧 Use ['ENV_NAME'] avoid vite:define plugin\n    const url = `http://${process.env[\"VITE_DEV_SERVER_HOST\"]}:${process.env[\"VITE_DEV_SERVER_PORT\"]}`;\n\n    win.loadURL(url);\n    win.webContents.openDevTools();\n  }\n\n  // Test active push message to Renderer-process\n  win.webContents.on(\"did-finish-load\", () => {\n    win?.webContents.send(\"main-process-message\", new Date().toLocaleString());\n  });\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith(\"https:\")) shell.openExternal(url);\n    return { action: \"deny\" };\n  });\n}\n\napp.whenReady().then(() => {\n  ipcMain.handle(\"dialog\", (event, method, params) => dialog[method](params));\n\n  return createWindow();\n});\n\napp.on(\"window-all-closed\", () => {\n  win = null;\n  if (process.platform !== \"darwin\") app.quit();\n});\n\napp.on(\"second-instance\", () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore();\n    win.focus();\n  }\n});\n\napp.on(\"activate\", () => {\n  const allWindows = BrowserWindow.getAllWindows();\n  if (allWindows.length) {\n    allWindows[0].focus();\n  } else {\n    createWindow();\n  }\n});\n"],"names":["Store","ipcMain","isexe","sync","fs","require$$0","checkStat","global","require$$1","require$$2","path","which","pathKey","pathKeyModule","pathKey_1","resolveCommand","shebangRegex","shebangCommand","readShebang","require$$3","isWin","parse","enoent","crossSpawnModule","crossSpawn","process","url","constants","signalExitModule","signalExit","os","bufferStream","getStreamModule","getStream_1","getStream","Buffer","childProcess","release","app","BrowserWindow","join","shell","dialog"],"mappings":"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"}